{
    "id": 714,
    "title": "Remove K Digits for Inventory Management",
    "difficulty": "Medium",
    "category": "Greedy Algorithms",
    "subcategory": "String Manipulation",
    "similar_question": {
        "platforms": [{"Leetcode": 402}, "PlatformB"],
        "companies": ["Amazon", "Microsoft", "Apple", "Google", "Bloomberg", "Oracle", "Goldman Sachs", "Uber", "Meta", "Atlassian"]
    },
    "real_life_domains": ["Inventory Management", "Data Compression", "Resource Allocation"], 
    "scenario": "You are managing an inventory system where each item is represented by a unique identification number as a string of digits. Due to a recent inventory audit, you need to streamline these ID numbers by removing a specified number of digits. The goal is to ensure the smallest possible ID number remains after removing these digits while preserving the order of the remaining digits.",
    "task": "Create an algorithm that removes K digits from the ID string to produce the smallest possible number. If K is equal to or larger than the length of the string, return '0'.",
    "examples": [
        {
            "input": {"num": "1432219", "k": 3},
            "output": "1219",
            "explanation": "Removing the digits '4', '3', and '2' results in the smallest number '1219'."
        },
        {
            "input": {"num": "10200", "k": 1},
            "output": "200",
            "explanation": "Removing the digit '1' gives '0200', but '200' is the smallest possible representation."
        },
        {
            "input": {"num": "10", "k": 2},
            "output": "0",
            "explanation": "Removing all digits leaves us with '0'."
        }
    ],
    "constraints": [
        "The input string will only contain digits (0-9).",
        "K will be a non-negative integer less than or equal to the length of the string."
    ]
}
