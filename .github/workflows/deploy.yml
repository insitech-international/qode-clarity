name: Deploy Frontend

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: "20"
  WORKING_DIRECTORY: "./frontend"
  API_BASE_URL: "https://b9a9-5-133-46-243.ngrok-free.app"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Create production environment file
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          echo "REACT_APP_API_BASE_URL=${{ env.API_BASE_URL }}" > .env.production
          echo "Created .env.production with content:"
          cat .env.production

      - name: Clean install dependencies
        working-directory: ./frontend
        run: |
          echo "Removing existing node_modules and lock file..."
          rm -rf node_modules
          rm -f package-lock.json

          echo "Installing dependencies..."
          npm install
          npm install react-icons@4.12.0
          npm install gh-pages --save-dev
          npm install axios fs-extra

      - name: Generate Static Cache
        working-directory: ./frontend
        env:
          API_BASE_URL: ${{ env.API_BASE_URL }}
        run: |
          mkdir -p src/cache/static
          node scripts/generateCache.js

      - name: Build
        working-directory: ./frontend
        env:
          CI: false
          PUBLIC_URL: "https://code-clarity.insitechinternational.com"
        run: |
          echo "REACT_APP_BASE_URL=https://code-clarity.insitechinternational.com" > .env
          npm run build

      - name: Prepare deployment
        working-directory: ./frontend
        run: |
          cd build
          echo "code-clarity.insitechinternational.com" > CNAME
          touch .nojekyll
          cp index.html 404.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/build
          force_orphan: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Deploy to GitHub Pages"

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Wait for branch creation
        run: |
          echo "Waiting for gh-pages branch to be created..."
          sleep 30

      - name: Verify deployment
        run: |
          if git ls-remote --heads origin gh-pages > /dev/null; then
            echo "gh-pages branch exists and is ready"
          else
            echo "Error: gh-pages branch was not created"
            exit 1
          fi
